version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: position-tracker-postgres-prod
    environment:
      POSTGRES_DB: position_tracker
      POSTGRES_USER: tracker_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-secure_pass_123}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U tracker_user -d position_tracker"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - position-tracker-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    hostname: zookeeper
    container_name: kafka-zookeeper-prod
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - position-tracker-network

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    hostname: kafka
    container_name: kafka-broker-prod
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
    networks:
      - position-tracker-network

  # Position Tracker API
  api:
    build: .
    container_name: position-tracker-api-prod
    environment:
      DATABASE_URL: postgresql+psycopg2://tracker_user:${POSTGRES_PASSWORD:-secure_pass_123}@postgres:5432/position_tracker
      DEBUG: "false"
      LOG_LEVEL: INFO
      HOST: 0.0.0.0
      PORT: 8000
      # Production settings
      WORKERS: 4
      MAX_WORKERS: 8
      TIMEOUT: 30
      KAFKA_BOOTSTRAP_SERVERS: "kafka:29092"
      KAFKA_TRADES_TOPIC: "transactions.enriched"
      KAFKA_CONSUMER_GROUP: "position-tracker-group"
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      kafka:
        condition: service_started
    volumes:
      - ./logs:/app/logs
    networks:
      - position-tracker-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--workers", "4"]

  # Nginx (Reverse Proxy)
  nginx:
    image: nginx:alpine
    container_name: position-tracker-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - api
    networks:
      - position-tracker-network
    restart: unless-stopped

  # Redis (for caching and sessions)
  redis:
    image: redis:7-alpine
    container_name: position-tracker-redis-prod
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - position-tracker-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  position-tracker-network:
    driver: bridge
